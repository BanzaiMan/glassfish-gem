#!/usr/bin/env jruby
require 'java'
require 'rubygems'
require 'glassfish'

require 'optparse'

OPTIONS = {
  :runtimes    => 1,
  :contextroot => '/',
#  :environment => (ENV['RAILS_ENV'] || "development").dup,
  :environment => "development",
  :app_dir => Dir.pwd,
  :port => 3000
}

opts = OptionParser.new do |opts|
  opts.on("-n", "--runtimes=runtimes", String, 
        "Number of runtimes to be launched.", "Default: 1") { |v| OPTIONS[:runtimes] = v }
  opts.on("-c", "--contextroot=contextroot", String, 
        "ContextRoot for the application", "Default: /") { |v| OPTIONS[:contextroot] = v }
  opts.on("-e", "--environment=environment", String,
        "Specifies the environment to run this server under (test/development/production).",
        "Default: development") { |v| OPTIONS[:environment] = v }
  opts.on("-p", "--port=port", String, 
        "Port where application will be deployed.", "Default: 3000") { |v| OPTIONS[:port] = v }
  opts.separator ""
  opts.on("-h", "--help", "Show this help message.") { puts opts; exit 0}
end


begin
  opts.parse!(ARGV)
rescue Exception => e
  if e.message != "exit"
    print e.backtrace.join("\n")
  end
  exit
end

ENV["RAILS_ENV"] = OPTIONS[:environment]
RAILS_ENV.replace(OPTIONS[:environment]) if defined?(RAILS_ENV)

OPTIONS[:app_dir] = ARGV.shift unless ARGV.empty?

GlassFish.startup(OPTIONS)
